---

# Provision the infrastructure using Terraform
- name: Provision infrastructure
  hosts: openstack
  roles:
    - ipa_infra
  tags:
    - always

# Setup tasks now that all hosts have been added to the correct groups


# Ensure that the secrets are generated and persisted in secure storge (TODO) or locally
- name: Generate and persist secrets
  hosts: openstack
  gather_facts: no
  roles:
    - persist_ipa_secrets
  tags: always

- import_playbook: vendor/eschercloudai/ansible-freeipa-appliance/ansible/validate.yml
  when: cluster_state is not defined or (cluster_state is defined and cluster_state != "absent")

- import_playbook: vendor/eschercloudai/ansible-freeipa-appliance/ansible/bootstrap.yml
- import_playbook: vendor/eschercloudai/ansible-freeipa-appliance/ansible/freeipa.yml


# - hosts: localhost
  # tasks:
    # - debug: var=outputs
      # when:
        # - cluster_state is not defined or cluster_state == 'present'
      # vars:
        # Ansible has a fitÂ when there are two 'hostvars' evaluations in a resolution chain,
        # so we have to repeat logic here unfortunately
        # outputs: >-
          # {{-
            # { "cluster_access_ip": hostvars[groups['openstack'][0]].cluster_gateway_ip } |
              # combine(
                # {
                  # "openondemand_url": "https://" ~ (hostvars[groups['openstack'][0]].cluster_floating_ip_address | replace('.', '-')) ~ ".sslip.io",
                  # "hpc_user_password": hostvars[groups['control'][0]].ansible_local.openhpc_secrets.vault_hpc_user_password
                # }
                # if zenith_fqdn_ood is not defined
                # else {}
              # )
          # }}
        # tags: outputs

